name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Cache uv dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/uv
        key: uv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-

    - name: Install dependencies
      run: uv sync --dev

    - name: Run Black code formatting check
      run: uv run black --check --diff .

    - name: Run isort import sorting check
      run: uv run isort --check-only --diff .

    - name: Run flake8 linting
      run: uv run flake8 .

    - name: Run mypy type checking
      run: uv run mypy crm

    - name: Run bandit security check
      run: uv run bandit -r crm -f json -o bandit-report.json || true

    - name: Upload bandit report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json

    - name: Run safety dependency check
      run: uv run safety check --json | tee safety-report.json || true

    - name: Upload safety report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: safety-dependency-report
        path: safety-report.json

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        config-file: '.github/dependency-review-config.yml'