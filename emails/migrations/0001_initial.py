# Generated by Django 5.2.7 on 2025-10-29 10:48

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EmailAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("filename", models.CharField(max_length=255, verbose_name="filename")),
                (
                    "content_type",
                    models.CharField(max_length=100, verbose_name="content type"),
                ),
                ("size", models.PositiveIntegerField(verbose_name="size (bytes)")),
                (
                    "file_path",
                    models.CharField(max_length=500, verbose_name="file path"),
                ),
                (
                    "content_id",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="content ID"
                    ),
                ),
                (
                    "is_inline",
                    models.BooleanField(
                        default=False, verbose_name="inline attachment"
                    ),
                ),
                (
                    "is_downloaded",
                    models.BooleanField(default=False, verbose_name="downloaded"),
                ),
                (
                    "download_errors",
                    models.TextField(blank=True, verbose_name="download errors"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
            ],
            options={
                "verbose_name": "email attachment",
                "verbose_name_plural": "email attachments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailCredentials",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "server",
                    models.CharField(
                        help_text="e.g., outlook.office365.com",
                        max_length=255,
                        verbose_name="Exchange server",
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="email address"),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Usually same as email",
                        max_length=255,
                        verbose_name="username",
                    ),
                ),
                ("password", models.CharField(max_length=255, verbose_name="password")),
                ("use_ssl", models.BooleanField(default=True, verbose_name="use SSL")),
                ("port", models.PositiveIntegerField(default=993, verbose_name="port")),
                (
                    "timeout",
                    models.PositiveIntegerField(
                        default=30, verbose_name="timeout (seconds)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "last_sync",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last sync"
                    ),
                ),
                (
                    "sync_interval",
                    models.PositiveIntegerField(
                        default=15, verbose_name="sync interval (minutes)"
                    ),
                ),
                (
                    "total_emails_processed",
                    models.PositiveIntegerField(
                        default=0, verbose_name="total emails processed"
                    ),
                ),
                ("last_error", models.TextField(blank=True, verbose_name="last error")),
                (
                    "last_error_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last error time"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "email credentials",
                "verbose_name_plural": "email credentials",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "message_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="message ID"
                    ),
                ),
                (
                    "uid",
                    models.CharField(blank=True, max_length=50, verbose_name="UID"),
                ),
                ("subject", models.CharField(max_length=500, verbose_name="subject")),
                ("sender", models.EmailField(max_length=254, verbose_name="sender")),
                (
                    "recipients_to",
                    models.JSONField(default=list, verbose_name="To recipients"),
                ),
                (
                    "recipients_cc",
                    models.JSONField(default=list, verbose_name="CC recipients"),
                ),
                (
                    "recipients_bcc",
                    models.JSONField(default=list, verbose_name="BCC recipients"),
                ),
                ("body_text", models.TextField(blank=True, verbose_name="text body")),
                ("body_html", models.TextField(blank=True, verbose_name="HTML body")),
                ("received_at", models.DateTimeField(verbose_name="received at")),
                (
                    "sent_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="sent at"),
                ),
                (
                    "size",
                    models.PositiveIntegerField(default=0, verbose_name="size (bytes)"),
                ),
                ("is_read", models.BooleanField(default=False, verbose_name="read")),
                (
                    "is_important",
                    models.BooleanField(default=False, verbose_name="important"),
                ),
                (
                    "has_attachments",
                    models.BooleanField(default=False, verbose_name="has attachments"),
                ),
                (
                    "parsed_inn",
                    models.CharField(
                        blank=True, max_length=12, verbose_name="parsed ИНН"
                    ),
                ),
                (
                    "parsed_project_number",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="parsed project number"
                    ),
                ),
                (
                    "parsed_contacts",
                    models.JSONField(
                        blank=True, default=list, verbose_name="parsed contacts"
                    ),
                ),
                (
                    "is_processed",
                    models.BooleanField(default=False, verbose_name="processed"),
                ),
                (
                    "processing_errors",
                    models.JSONField(
                        blank=True, default=list, verbose_name="processing errors"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "email message",
                "verbose_name_plural": "email messages",
                "ordering": ["-received_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailProcessingRule",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "sender_contains",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="sender contains"
                    ),
                ),
                (
                    "subject_contains",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="subject contains"
                    ),
                ),
                (
                    "body_contains",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="body contains"
                    ),
                ),
                (
                    "auto_create_project",
                    models.BooleanField(
                        default=False, verbose_name="auto create project"
                    ),
                ),
                (
                    "auto_create_contact",
                    models.BooleanField(
                        default=False, verbose_name="auto create contact"
                    ),
                ),
                (
                    "mark_as_important",
                    models.BooleanField(
                        default=False, verbose_name="mark as important"
                    ),
                ),
                (
                    "priority",
                    models.PositiveIntegerField(default=100, verbose_name="priority"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
            ],
            options={
                "verbose_name": "email processing rule",
                "verbose_name_plural": "email processing rules",
                "ordering": ["priority", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailSyncLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "emails_fetched",
                    models.PositiveIntegerField(
                        default=0, verbose_name="emails fetched"
                    ),
                ),
                (
                    "emails_processed",
                    models.PositiveIntegerField(
                        default=0, verbose_name="emails processed"
                    ),
                ),
                (
                    "emails_skipped",
                    models.PositiveIntegerField(
                        default=0, verbose_name="emails skipped"
                    ),
                ),
                (
                    "attachments_downloaded",
                    models.PositiveIntegerField(
                        default=0, verbose_name="attachments downloaded"
                    ),
                ),
                ("started_at", models.DateTimeField(verbose_name="started at")),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="completed at"
                    ),
                ),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(
                        default=0, verbose_name="duration (seconds)"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("partial", "Partial success"),
                            ("failed", "Failed"),
                        ],
                        default="success",
                        max_length=20,
                        verbose_name="status",
                    ),
                ),
                (
                    "errors",
                    models.JSONField(blank=True, default=list, verbose_name="errors"),
                ),
                (
                    "warnings",
                    models.JSONField(blank=True, default=list, verbose_name="warnings"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
            ],
            options={
                "verbose_name": "email sync log",
                "verbose_name_plural": "email sync logs",
                "ordering": ["-started_at"],
            },
        ),
    ]
