import os
import sys
from django.core.management.base import BaseCommand, CommandError
from django.contrib.auth import get_user_model
from django.db import transaction
from django.conf import settings
from getpass import getpass
import requests

from users.models import Role, Permission, UserRole, RolePermission
from emails.models import EmailCredentials

User = get_user_model()


class Command(BaseCommand):
    help = "Initialize the CRM system with basic data and admin user"

    def add_arguments(self, parser):
        parser.add_argument(
            "--skip-admin",
            action="store_true",
            help="Skip creating admin user",
        )
        parser.add_argument(
            "--email-setup",
            action="store_true",
            help="Setup email credentials during initialization",
        )

    def handle(self, *args, **options):
        self.stdout.write(
            self.style.SUCCESS("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é CRM —Å–∏—Å—Ç–µ–º—ã...")
        )

        try:
            with transaction.atomic():
                # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
                self.create_basic_roles_and_permissions()

                # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                if not options["skip_admin"]:
                    self.create_admin_user()

                # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º email –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
                if options["email_setup"]:
                    self.setup_email_credentials()

                # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                self.create_system_settings()

            self.stdout.write(
                self.style.SUCCESS("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CRM —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            )

            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ
            self.stdout.write(self.style.WARNING("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"))
            self.stdout.write("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver")
            self.stdout.write("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω–∫—É: http://localhost:8000/admin/")
            self.stdout.write("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ email –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            self.stdout.write("4. –ù–∞—á–Ω–∏—Ç–µ —Ä–∞–±–æ—Ç—É —Å —Å–∏—Å—Ç–µ–º–æ–π!")

        except Exception as e:
            raise CommandError(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")

    def create_basic_roles_and_permissions(self):
        """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã RBAC."""
        self.stdout.write("üìù –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è...")

        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
        permissions_data = [
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
            {"name": "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "codename": "view_users"},
            {"name": "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "codename": "add_users"},
            {"name": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "codename": "change_users"},
            {"name": "–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "codename": "delete_users"},
            # Email
            {"name": "–ü—Ä–æ—Å–º–æ—Ç—Ä email", "codename": "view_emails"},
            {"name": "–û—Ç–ø—Ä–∞–≤–∫–∞ email", "codename": "send_emails"},
            {"name": "–£–¥–∞–ª–µ–Ω–∏–µ email", "codename": "delete_emails"},
            # –ü—Ä–æ–µ–∫—Ç—ã
            {"name": "–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤", "codename": "view_projects"},
            {"name": "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤", "codename": "add_projects"},
            {"name": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤", "codename": "change_projects"},
            {"name": "–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤", "codename": "delete_projects"},
            # –ö–æ–º–ø–∞–Ω–∏–∏
            {"name": "–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–º–ø–∞–Ω–∏–π", "codename": "view_companies"},
            {"name": "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π", "codename": "add_companies"},
            {"name": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π", "codename": "change_companies"},
            {"name": "–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π", "codename": "delete_companies"},
            # –ö–æ–Ω—Ç–∞–∫—Ç—ã
            {"name": "–ü—Ä–æ—Å–º–æ—Ç—Ä –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤", "codename": "view_contacts"},
            {"name": "–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤", "codename": "add_contacts"},
            {"name": "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤", "codename": "change_contacts"},
            {"name": "–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤", "codename": "delete_contacts"},
            # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
            {"name": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏", "codename": "manage_roles"},
            {"name": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏", "codename": "manage_permissions"},
            {"name": "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤", "codename": "view_logs"},
            {"name": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π", "codename": "manage_system"},
        ]

        permissions = []
        for perm_data in permissions_data:
            perm, created = Permission.objects.get_or_create(
                codename=perm_data["codename"],
                defaults={
                    "name": perm_data["name"],
                    "is_system_permission": True,
                },
            )
            permissions.append(perm)
            if created:
                self.stdout.write(f"  ‚úì –°–æ–∑–¥–∞–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {perm.name}")

        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏
        roles_data = [
            {
                "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                "description": "–ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º —Å–∏—Å—Ç–µ–º—ã",
                "permissions": permissions,  # –í—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
                "is_system_role": True,
            },
            {
                "name": "–ú–µ–Ω–µ–¥–∂–µ—Ä",
                "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, –∫–æ–º–ø–∞–Ω–∏—è–º–∏ –∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏",
                "permissions": [
                    p
                    for p in permissions
                    if p.codename
                    in [
                        "view_emails",
                        "send_emails",
                        "view_projects",
                        "add_projects",
                        "change_projects",
                        "view_companies",
                        "add_companies",
                        "change_companies",
                        "view_contacts",
                        "add_contacts",
                        "change_contacts",
                    ]
                ],
                "is_system_role": True,
            },
            {
                "name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
                "description": "–ë–∞–∑–æ–≤—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –¥–∞–Ω–Ω—ã—Ö",
                "permissions": [
                    p
                    for p in permissions
                    if p.codename
                    in [
                        "view_emails",
                        "view_projects",
                        "view_companies",
                        "view_contacts",
                    ]
                ],
                "is_system_role": True,
            },
        ]

        for role_data in roles_data:
            role, created = Role.objects.get_or_create(
                name=role_data["name"],
                defaults={
                    "description": role_data["description"],
                    "is_system_role": role_data["is_system_role"],
                },
            )

            if created:
                self.stdout.write(f"  ‚úì –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å: {role.name}")

                # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ä–æ–ª–∏
                for permission in role_data["permissions"]:
                    RolePermission.objects.get_or_create(
                        role=role, permission=permission, defaults={"assigned_by": None}
                    )

        self.stdout.write("‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ä–æ–ª–∏ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã")

    def create_admin_user(self):
        """–°–æ–∑–¥–∞–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã."""
        self.stdout.write("üë§ –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–∏—Å—Ç–µ–º—ã...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        if User.objects.exists():
            self.stdout.write(
                "‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            )
            return

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        self.stdout.write("\nüìù –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")

        email = input("Email: ").strip()
        if not email:
            raise CommandError("Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")

        username = input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
        if not username:
            username = email.split("@")[0]

        first_name = input("–ò–º—è: ").strip()
        last_name = input("–§–∞–º–∏–ª–∏—è: ").strip()

        # –ü–∞—Ä–æ–ª—å
        while True:
            password = getpass("–ü–∞—Ä–æ–ª—å: ")
            if not password:
                self.stdout.write(self.style.ERROR("–ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"))
                continue

            password_confirm = getpass("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
            if password != password_confirm:
                self.stdout.write(self.style.ERROR("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç"))
                continue
            break

        # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_user = User.objects.create_user(
            email=email,
            username=username,
            password=password,
            first_name=first_name,
            last_name=last_name,
            is_staff=True,
            is_superuser=True,
        )

        # –ù–∞–∑–Ω–∞—á–∞–µ–º —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        admin_role = Role.objects.get(name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        UserRole.objects.create(
            user=admin_user,
            role=admin_role,
            assigned_by=None,
        )

        self.stdout.write(
            self.style.SUCCESS(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {admin_user.email} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        )

    def setup_email_credentials(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ email."""
        self.stdout.write("üìß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ email...")

        # –ü–æ–ª—É—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        try:
            admin_user = User.objects.filter(is_superuser=True).first()
            if not admin_user:
                self.stdout.write(
                    self.style.WARNING(
                        "‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É email"
                    )
                )
                return
        except User.DoesNotExist:
            self.stdout.write(
                self.style.WARNING(
                    "‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É email"
                )
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ credentials
        if EmailCredentials.objects.filter(user=admin_user).exists():
            self.stdout.write("‚ö†Ô∏è  Email credentials —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
            return

        self.stdout.write("\nüìß –í–≤–µ–¥–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Exchange:")
        email = input("Email –∞–¥—Ä–µ—Å: ").strip()
        if not email:
            self.stdout.write("‚ö†Ô∏è  Email –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
            return

        server = input("–°–µ—Ä–≤–µ—Ä Exchange (mail.company.com): ").strip()
        if not server:
            self.stdout.write("‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
            return

        password = getpass("–ü–∞—Ä–æ–ª—å: ")
        if not password:
            self.stdout.write("‚ö†Ô∏è  –ü–∞—Ä–æ–ª—å –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É")
            return

        # –°–æ–∑–¥–∞–µ–º credentials
        EmailCredentials.objects.create(
            user=admin_user,
            email=email,
            server=server,
            password=password,  # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ —à–∏—Ñ—Ä–æ–≤–∞—Ç—å
            use_ssl=True,
            is_active=True,
        )

        self.stdout.write(
            self.style.SUCCESS(f"‚úÖ Email credentials –¥–ª—è {email} —Å–æ–∑–¥–∞–Ω—ã")
        )

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        self.stdout.write("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...")
        try:
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            self.stdout.write("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ (—Ç–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω)")
        except Exception as e:
            self.stdout.write(
                self.style.WARNING(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: {str(e)}")
            )

    def create_system_settings(self):
        """–°–æ–∑–¥–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã."""
        self.stdout.write("‚öôÔ∏è  –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        # –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è email, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ —Ç.–¥.

        self.stdout.write("‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã")
